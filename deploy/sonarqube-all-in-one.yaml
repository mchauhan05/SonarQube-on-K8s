# Sonar Service Account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sonar-admin
  namespace: devops-tools
  labels:
    control-plane: sonar-admin
    app.kubernetes.io/version: "1.0.0"

---
# Sonar Secret
apiVersion: v1
kind: Secret
metadata:
  name: sonar-postgres-secret
  namespace: devops-tools
  labels:
    control-plane: sonar-admin
    app.kubernetes.io/version: "1.0.0"
type: Opaque
data:
  SONARQUBE_JDBC_PASSWORD: <Base64 Encoded>

---
# Sonar ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: sonar-postgres-config
  namespace: devops-tools
  labels:
    control-plane: sonar-admin
    app.kubernetes.io/version: "1.0.0"
data:
  SONARQUBE_JDBC_URL: "jdbc:postgresql://<POSTGRES_URL>/pg_sonarqube"
  SONARQUBE_JDBC_USERNAME: "sonaruser"

---
# Sonar Cluster Role
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: sonar-admin
  labels:
    control-plane: sonar-admin
    app.kubernetes.io/version: "1.0.0"
rules:
  - apiGroups:
      - ""
    resources:
      - "*"
    verbs:
      - "*"

---
# Sonar Cluster Role Binding
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: sonar-admin
  labels:
    control-plane: sonar-admin
    app.kubernetes.io/version: "1.0.0"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: sonar-admin
subjects:
  - kind: ServiceAccount
    name: sonar-admin
    namespace: devops-tools

---
# Persistent Volume Claim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonarqube-pvc
  namespace: devops-tools
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: standard
  resources:
    requests:
      storage: 10Gi

---
# Persistent Volume Claim
kind: PersistentVolume
apiVersion: v1
metadata:
  name: sonarqube-pv
  labels:
    type: standard
spec:
  capacity:
    storage: 30Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  claimRef:
    namespace: devops-tools
    name: sonarqube-pvc
  hostPath:
    path: /data/postgresql/